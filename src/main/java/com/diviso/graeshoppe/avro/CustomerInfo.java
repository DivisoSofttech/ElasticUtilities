/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.diviso.graeshoppe.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CustomerInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -644383951167817545L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CustomerInfo\",\"namespace\":\"com.diviso.graeshoppe.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"]},{\"name\":\"idpCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":\"null\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":\"null\"},{\"name\":\"idpSub\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":\"null\"},{\"name\":\"imageLink\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":\"null\"},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":\"null\"},{\"name\":\"image\",\"type\":[\"null\",\"bytes\"],\"default\":\"Ã¿\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CustomerInfo> ENCODER =
      new BinaryMessageEncoder<CustomerInfo>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CustomerInfo> DECODER =
      new BinaryMessageDecoder<CustomerInfo>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CustomerInfo> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CustomerInfo> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CustomerInfo>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CustomerInfo to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CustomerInfo from a ByteBuffer. */
  public static CustomerInfo fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Long id;
  @Deprecated public java.lang.String idpCode;
  @Deprecated public java.lang.String name;
  @Deprecated public java.lang.String idpSub;
  @Deprecated public java.lang.String imageLink;
  @Deprecated public java.lang.String status;
  @Deprecated public java.nio.ByteBuffer image;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CustomerInfo() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param idpCode The new value for idpCode
   * @param name The new value for name
   * @param idpSub The new value for idpSub
   * @param imageLink The new value for imageLink
   * @param status The new value for status
   * @param image The new value for image
   */
  public CustomerInfo(java.lang.Long id, java.lang.String idpCode, java.lang.String name, java.lang.String idpSub, java.lang.String imageLink, java.lang.String status, java.nio.ByteBuffer image) {
    this.id = id;
    this.idpCode = idpCode;
    this.name = name;
    this.idpSub = idpSub;
    this.imageLink = imageLink;
    this.status = status;
    this.image = image;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return idpCode;
    case 2: return name;
    case 3: return idpSub;
    case 4: return imageLink;
    case 5: return status;
    case 6: return image;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: idpCode = (java.lang.String)value$; break;
    case 2: name = (java.lang.String)value$; break;
    case 3: idpSub = (java.lang.String)value$; break;
    case 4: imageLink = (java.lang.String)value$; break;
    case 5: status = (java.lang.String)value$; break;
    case 6: image = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'idpCode' field.
   * @return The value of the 'idpCode' field.
   */
  public java.lang.String getIdpCode() {
    return idpCode;
  }

  /**
   * Sets the value of the 'idpCode' field.
   * @param value the value to set.
   */
  public void setIdpCode(java.lang.String value) {
    this.idpCode = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'idpSub' field.
   * @return The value of the 'idpSub' field.
   */
  public java.lang.String getIdpSub() {
    return idpSub;
  }

  /**
   * Sets the value of the 'idpSub' field.
   * @param value the value to set.
   */
  public void setIdpSub(java.lang.String value) {
    this.idpSub = value;
  }

  /**
   * Gets the value of the 'imageLink' field.
   * @return The value of the 'imageLink' field.
   */
  public java.lang.String getImageLink() {
    return imageLink;
  }

  /**
   * Sets the value of the 'imageLink' field.
   * @param value the value to set.
   */
  public void setImageLink(java.lang.String value) {
    this.imageLink = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'image' field.
   * @return The value of the 'image' field.
   */
  public java.nio.ByteBuffer getImage() {
    return image;
  }

  /**
   * Sets the value of the 'image' field.
   * @param value the value to set.
   */
  public void setImage(java.nio.ByteBuffer value) {
    this.image = value;
  }

  /**
   * Creates a new CustomerInfo RecordBuilder.
   * @return A new CustomerInfo RecordBuilder
   */
  public static com.diviso.graeshoppe.avro.CustomerInfo.Builder newBuilder() {
    return new com.diviso.graeshoppe.avro.CustomerInfo.Builder();
  }

  /**
   * Creates a new CustomerInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CustomerInfo RecordBuilder
   */
  public static com.diviso.graeshoppe.avro.CustomerInfo.Builder newBuilder(com.diviso.graeshoppe.avro.CustomerInfo.Builder other) {
    return new com.diviso.graeshoppe.avro.CustomerInfo.Builder(other);
  }

  /**
   * Creates a new CustomerInfo RecordBuilder by copying an existing CustomerInfo instance.
   * @param other The existing instance to copy.
   * @return A new CustomerInfo RecordBuilder
   */
  public static com.diviso.graeshoppe.avro.CustomerInfo.Builder newBuilder(com.diviso.graeshoppe.avro.CustomerInfo other) {
    return new com.diviso.graeshoppe.avro.CustomerInfo.Builder(other);
  }

  /**
   * RecordBuilder for CustomerInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CustomerInfo>
    implements org.apache.avro.data.RecordBuilder<CustomerInfo> {

    private java.lang.Long id;
    private java.lang.String idpCode;
    private java.lang.String name;
    private java.lang.String idpSub;
    private java.lang.String imageLink;
    private java.lang.String status;
    private java.nio.ByteBuffer image;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.diviso.graeshoppe.avro.CustomerInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.idpCode)) {
        this.idpCode = data().deepCopy(fields()[1].schema(), other.idpCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.idpSub)) {
        this.idpSub = data().deepCopy(fields()[3].schema(), other.idpSub);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.imageLink)) {
        this.imageLink = data().deepCopy(fields()[4].schema(), other.imageLink);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.status)) {
        this.status = data().deepCopy(fields()[5].schema(), other.status);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.image)) {
        this.image = data().deepCopy(fields()[6].schema(), other.image);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CustomerInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(com.diviso.graeshoppe.avro.CustomerInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.idpCode)) {
        this.idpCode = data().deepCopy(fields()[1].schema(), other.idpCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.idpSub)) {
        this.idpSub = data().deepCopy(fields()[3].schema(), other.idpSub);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.imageLink)) {
        this.imageLink = data().deepCopy(fields()[4].schema(), other.imageLink);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.status)) {
        this.status = data().deepCopy(fields()[5].schema(), other.status);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.image)) {
        this.image = data().deepCopy(fields()[6].schema(), other.image);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'idpCode' field.
      * @return The value.
      */
    public java.lang.String getIdpCode() {
      return idpCode;
    }

    /**
      * Sets the value of the 'idpCode' field.
      * @param value The value of 'idpCode'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder setIdpCode(java.lang.String value) {
      validate(fields()[1], value);
      this.idpCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'idpCode' field has been set.
      * @return True if the 'idpCode' field has been set, false otherwise.
      */
    public boolean hasIdpCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'idpCode' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder clearIdpCode() {
      idpCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'idpSub' field.
      * @return The value.
      */
    public java.lang.String getIdpSub() {
      return idpSub;
    }

    /**
      * Sets the value of the 'idpSub' field.
      * @param value The value of 'idpSub'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder setIdpSub(java.lang.String value) {
      validate(fields()[3], value);
      this.idpSub = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'idpSub' field has been set.
      * @return True if the 'idpSub' field has been set, false otherwise.
      */
    public boolean hasIdpSub() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'idpSub' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder clearIdpSub() {
      idpSub = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'imageLink' field.
      * @return The value.
      */
    public java.lang.String getImageLink() {
      return imageLink;
    }

    /**
      * Sets the value of the 'imageLink' field.
      * @param value The value of 'imageLink'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder setImageLink(java.lang.String value) {
      validate(fields()[4], value);
      this.imageLink = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'imageLink' field has been set.
      * @return True if the 'imageLink' field has been set, false otherwise.
      */
    public boolean hasImageLink() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'imageLink' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder clearImageLink() {
      imageLink = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder setStatus(java.lang.String value) {
      validate(fields()[5], value);
      this.status = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder clearStatus() {
      status = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'image' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getImage() {
      return image;
    }

    /**
      * Sets the value of the 'image' field.
      * @param value The value of 'image'.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder setImage(java.nio.ByteBuffer value) {
      validate(fields()[6], value);
      this.image = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'image' field has been set.
      * @return True if the 'image' field has been set, false otherwise.
      */
    public boolean hasImage() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'image' field.
      * @return This builder.
      */
    public com.diviso.graeshoppe.avro.CustomerInfo.Builder clearImage() {
      image = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CustomerInfo build() {
      try {
        CustomerInfo record = new CustomerInfo();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.idpCode = fieldSetFlags()[1] ? this.idpCode : (java.lang.String) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.idpSub = fieldSetFlags()[3] ? this.idpSub : (java.lang.String) defaultValue(fields()[3]);
        record.imageLink = fieldSetFlags()[4] ? this.imageLink : (java.lang.String) defaultValue(fields()[4]);
        record.status = fieldSetFlags()[5] ? this.status : (java.lang.String) defaultValue(fields()[5]);
        record.image = fieldSetFlags()[6] ? this.image : (java.nio.ByteBuffer) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CustomerInfo>
    WRITER$ = (org.apache.avro.io.DatumWriter<CustomerInfo>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CustomerInfo>
    READER$ = (org.apache.avro.io.DatumReader<CustomerInfo>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
